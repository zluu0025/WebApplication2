@model WebApplication2.E_mail_Sending.Vmodel

@{
    ViewBag.Title = "Contact";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<address>
    Youe can contact our assister or Administers ask for helping <br />
    E-mail Contacting:<br />
    Assisting E-mail: Assist@test.com<br />
    Administer E-maill:Admin@test.com<br />
    <abbr title="Phone">Phone:</abbr>
    coming soon
    "if you want to send the same e-mail to many receipent, please seperate each e-mail address by using the semicolon"<br/>
</address>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    if (@ViewBag.Result != null)
    {
        <div class="alert alert-info">@ViewBag.Result</div>
    }

    <div class="form-horizontal">
        <h4>Send Email Section </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ToEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ToEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToEmail, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Cc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Cc, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Cc, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Contents, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>

            <a class="btn btn-default" @Html.ActionLink("Upload File", "File_Save", "UploadFile")></a>

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.FP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.FP, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FP, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Home", "Index")
</div>

@section Scripts
    {
    @Scripts.Render("~/bundles/jqueryval")

}

